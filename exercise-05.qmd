---
title: "exercise-05"

format: html

editor: visual
---

Challenge 1

```{r}
library(tidyverse)
library(dplyr)
f<- "https://raw.githubusercontent.com/difiore/ada-datasets/main/IMDB-movies.csv"
d<- read.csv(f, header=TRUE)
d


d_filt <- d |> 
  filter(startYear >= 1920 & startYear <= 1979 & runtimeMinutes >= 60 & runtimeMinutes <= 180) |> 
  mutate(decade = paste0(substr(startYear, 3, 3), "0s"))

d_filt

#Step 3
gplot <- ggplot(data = d_filt, aes(x = d_filt$runtimeMinutes)) + geom_histogram(binwidth = 4, fill = "blue", color = "black") + facet_wrap(~decade) + labs(title = "Movie Runtimes by Decade", x = " Movie Runtime", y = "Count") +
  theme_minimal()

gplot

#Step 4 Calculating Stats
results <- d_filt |> group_by(decade) |> summarise(mean_R= mean(runtimeMinutes), sd_R= sd(runtimeMinutes))
 
results



#Step 5

single_v <- d_filt |> group_by(decade) |> slice_sample(n=100)|> summarise(mean_R= mean(runtimeMinutes), sd_R= sd(runtimeMinutes))

 single_v
 
 
 
 #Step 6
 
 single_v <- d_filt |> 
  group_by(decade) |> 
  slice_sample(n = 100) |>  
  summarise(
    mean_R = mean(runtimeMinutes, na.rm = TRUE),
    sd_R = sd(runtimeMinutes, na.rm = TRUE),
    SE_R = sd_R / sqrt(100)
  )

single_v


#Step 7

#Get the difference between samole mean and population mean 

comparison <- left_join(single_v, results, by = "decade", suffix = c("_sample", "_pop"))

comparison <- comparison |> 
  mutate(Diff_mean = mean_R_sample - mean_R_pop)

comparison

#Sample SE vs Pop SE

comparison <- comparison |> 
  mutate(SE_pop = sd_R_pop / sqrt(100),
         Diff_SE = SE_R - SE_pop)

comparison


#Step 8 

library(dplyr)
library(purrr)

#sampling ditribution

sample_d <- d_filt |> 
  group_by(decade) |> 
  summarise(
    samples = list(rerun(1000, sample(runtimeMinutes, 100, replace = FALSE)))
  ) |> 
  unnest(cols = c(samples)) |> 
  mutate(sample_mean = map_dbl(samples, mean))

sample_d

#Step 9
stats <-sample_d |>
  group_by(decade) |> 
  summarise(
    mean_of_means = mean(sample_mean),  
    std_error = sd(sample_mean))


stats

# Histograms of the sampling distributions of means for each decade

ggplot(sample_d, aes(x = sample_mean)) + 
  geom_histogram(binwidth = 2, fill = "red", color = "black", alpha = 0.7) + 
  facet_wrap(~decade) + 
  labs(title = "Sampling Distribution of Means by Decade", 
       x = "Sample Mean", 
       y = "Frequency") + 
  theme_minimal()

  #Answer: It has a bell-shaped/normal distribution
  
#Step 10
#Standard error from first sample of 100 movies

single_v <- d_filt |> 
  group_by(decade) |> 
  slice_sample(n = 100) |>  
  summarise(
    mean_R = mean(runtimeMinutes),
    sd_R = sd(runtimeMinutes),
    SE_R = sd_R / sqrt(100)
  )

single_v

# Standard error based on population standard deviation

results <- results |> 
  mutate(SE_population = sd_R / sqrt(100)) 

results

#Standard error from sampling distribution

comparison <- left_join(single_v, results, by = "decade", suffix = c("_sample", "_pop")) |>
  left_join(stats, by = "decade")

# Calculate the differences between SE, population SE, and sampling distribution SE

comparison <- comparison |> 
  mutate(
    Diff_SE_sample_vs_population = SE_R - (sd_R_pop / sqrt(100)), 
    Diff_SE_sample_vs_sampling_distribution = SE_R - std_error  
  )


comparison



```